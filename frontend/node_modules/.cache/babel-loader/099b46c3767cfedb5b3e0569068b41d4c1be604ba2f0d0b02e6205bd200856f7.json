{"ast":null,"code":"// ✅ api.js\nconst API_URL = \"http://127.0.0.1:8000/api/ipos/\";\nexport async function fetchIPOs() {\n  const response = await fetch(API_URL);\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch IPOs\");\n  }\n  return response.json();\n}\nexport async function createIPO(ipoData) {\n  const response = await fetch(API_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(ipoData)\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to create IPO\");\n  }\n  return response.json();\n}","map":{"version":3,"names":["API_URL","fetchIPOs","response","fetch","ok","Error","json","createIPO","ipoData","method","headers","body","JSON","stringify"],"sources":["D:/ipo_web_application/frontend/src/api.js"],"sourcesContent":["// ✅ api.js\r\nconst API_URL = \"http://127.0.0.1:8000/api/ipos/\";\r\n\r\nexport async function fetchIPOs() {\r\n  const response = await fetch(API_URL);\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to fetch IPOs\");\r\n  }\r\n  return response.json();\r\n}\r\n\r\nexport async function createIPO(ipoData) {\r\n  const response = await fetch(API_URL, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(ipoData),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to create IPO\");\r\n  }\r\n  return response.json();\r\n}\r\n\r\n\r\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,iCAAiC;AAEjD,OAAO,eAAeC,SAASA,CAAA,EAAG;EAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,CAAC;EACrC,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EACzC;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB;AAEA,OAAO,eAAeC,SAASA,CAACC,OAAO,EAAE;EACvC,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,EAAE;IACpCS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;EAC9B,CAAC,CAAC;EAEF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EACzC;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}